# To do - short term
- plot training / test error -> make matplotlib work
    - https://scikit-learn.org/stable/auto_examples/linear_model/plot_ols.html
    - using only the first feature for 2d plot!
    - think about project structure -> where to put the plots?
        - simply in'visuals'? Subfolders of visuals? 'eda', 'model evaluation'...
        - dedicated folders for 'eda' and 'model_evaluation'?
- plot learning / loss curves?
    - https://scikit-learn.org/stable/modules/learning_curve.html
- create (lagged) trend and seasonality variables
    - moving averages
    - 6h MA? 3h MA?
- create z-score variables?
    - https://twitter.com/mattrowsboats/status/1514293331278372876 
- scale variables to normalize coefficient between 0 and 1
    - do it in pipeline, close to the end
    - scale all variables or only selected ones? enable both?
        - e.g. all = True -> scale all variables
        - if all = False -> provide a list of variables to be scaled


# To do - long term
- structure for multiple models / experiments
    - how are they (data / parameters) logged and tracked?
    - how should the folder structure be?
    - main.py with a main()-method as a main entry point for the app?
- Sub config file for each group of data to be used?
    - with hydra
        - https://www.youtube.com/watch?v=tEsPyYnzt8s
        - 24:30
    - or how to do it with another way?
        - data to be used must be tracked
- MLFlow / DVC
- Think about model evaluation
- Think about Exploratory Data Analysis


# chain multiple functions
- https://stackoverflow.com/questions/20454118/better-way-to-call-a-chain-of-functions-in-python













